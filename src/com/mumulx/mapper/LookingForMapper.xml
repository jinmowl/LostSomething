<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.mumulx.mapper.LookingForMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加寻物启事记录 -->
	<insert id="addLookingFor" parameterType="lookingFor">
		insert into t_lookingFor(title,goodsName,goodsPhoto,lostTime,lostPlace,goodDesc,reward,telephone,userObj,addTime) values 
		(#{title},#{goodsName},#{goodsPhoto},#{lostTime},#{lostPlace},#{goodDesc},#{reward},#{telephone},#{userObj.user_name},#{addTime})
	</insert>

	<!-- 按照查询条件分页查询寻物启事记录 -->
	<select id="queryLookingFor" resultMap="lookingForMap" >
		select t_lookingFor.* from t_lookingFor,t_userInfo ${where} and t_lookingFor.userObj = t_userInfo.user_name limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="lookingForMap" type="lookingFor">
        <id property="lookingForId" column="lookingForId" />
        <association property="userObj" column="userObj" select="com.mumulx.mapper.UserInfoMapper.getUserInfo" />
    </resultMap>

    <!-- 按照查询条件查询所有寻物启事记录 -->
	<select id="queryLookingForList" resultMap="lookingForMap" >
		select t_lookingFor.* from t_lookingFor,t_userInfo ${where} and t_lookingFor.userObj = t_userInfo.user_name
	</select>

    <!-- 按照查询条件的寻物启事记录数 -->
	<select id="queryLookingForCount" resultType="int">
		select count(*) from t_lookingFor,t_userInfo ${where} and t_lookingFor.userObj = t_userInfo.user_name
	</select>

	<!-- 根据主键查询某个寻物启事记录 -->
	<select id="getLookingFor" parameterType="int" resultMap="lookingForMap">
		select * from t_lookingFor where t_lookingFor.lookingForId = #{lookingForId}
	</select>
	<!-- 更新寻物启事记录 -->
	<update id="updateLookingFor" parameterType="lookingFor">
		update t_lookingFor set title=#{title},goodsName=#{goodsName},
		
		<if test="goodsPhoto!=null and goodsPhoto!=''">
			goodsPhoto=#{goodsPhoto},
		</if>
		
		lostTime=#{lostTime},lostPlace=#{lostPlace},goodDesc=#{goodDesc},reward=#{reward},telephone=#{telephone},userObj=#{userObj.user_name},addTime=#{addTime} where lookingForId = #{lookingForId}
	</update>

	<!-- 删除寻物启事记录 -->
	<delete id="deleteLookingFor" parameterType="int">
		delete from t_lookingFor where lookingForId=#{lookingForId}
	</delete>

</mapper>
